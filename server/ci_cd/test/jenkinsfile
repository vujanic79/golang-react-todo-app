pipeline {
    agent any

    stages {
        stage('Verify Shell Environment') {
            steps {
                script {
                    def jobName = env.JOB_NAME
                    def buildNumber = env.BUILD_NUMBER

                    echo "Job Name: $jobName"
                    echo "Build Number: $buildNumber"

                    sh 'docker --version'
                }
            }
        }

        stage('Checkout Git Repository') {
            steps {
                script {
                    def gitRepoUrl = 'https://github.com/vujanic79/golang-react-todo-app.git'

                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/main']],
                        userRemoteConfigs: [[url: gitRepoUrl]],
                        extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'CloneOption', noTags: false, shallow: true, depth: 1]]
                    ])
                }
            }
        }

        stage('Run Tests') {
            steps {
                sh 'chmod +x server/ci_cd/test/scripts/001_run_tests.sh && server/ci_cd/test/scripts/001_run_tests.sh'
                junit 'server/report.xml'
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Get the job name and build number
                    def jobName = env.JOB_NAME
                    def buildNumber = env.BUILD_NUMBER

                    withCredentials([usernamePassword(credentialsId: '844bc746-c1af-475a-8a83-bfacc603449f', usernameVariable: 'DOCKER_HUB_USER', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        sh "chmod +x server/002_docker_push.sh"
                        sh "server/002_docker_push.sh $buildNumber"
                    }
                    echo "Build Completed - Job Name: $jobName  --  Build Number: $buildNumber"
                }
            }
        }
    }
}